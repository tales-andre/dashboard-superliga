name: Build and Deploy

on:
  push:
    branches: [ "main", "qa", "prd" ]

jobs:
  build_and_deploy:
    # Se você quiser rodar em runner do GitHub, use:
    # runs-on: ubuntu-latest
    
    # Se quiser rodar em runner próprio (self-hosted) no Windows, use:
    runs-on: self-hosted
    
    env:
      IMAGE_NAME: talesvalcacer/superliga-dashboard

    steps:
      - name: Mark directory as safe
        run: git config --global --add safe.directory C:/Users/tales/actions-runner/_work/dashboard-superliga/dashboard-superliga

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.ref_name }} .
          docker push ${{ env.IMAGE_NAME }}:${{ github.ref_name }}

      - name: Set Kubernetes context
        run: |
          # Ajuste conforme o nome do contexto configurado no seu kubeconfig.
          # Se você tiver um único cluster local, talvez seja apenas "default" 
          # ou "minikube" ou algo que você tenha definido.
          kubectl config use-context QAS

      - name: Prepare K8s manifest
        id: prepare_manifest
        run: |
          # Substitui {{namespace}} e {{image}}
          sed -e "s|{{namespace}}|${{ github.ref_name }}|g" \
              -e "s|{{image}}|$IMAGE_NAME:${{ github.ref_name }}|g" \
              app.yaml > app.final.yaml

      - name: Validate manifest
        run: |
          echo "======= Conteúdo do app.final.yaml ======="
          cat app.final.yaml
          kubectl apply --dry-run=client -f app.final.yaml

      - name: Deploy
        run: |
          kubectl apply -f app.final.yaml
