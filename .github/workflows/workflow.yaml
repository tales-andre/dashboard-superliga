name: Build and Deploy

on:
  push:
    branches: [ "qa", "prd" ]  # Ajustado para apenas as branches qa e prd

jobs:
  build_and_deploy:
    runs-on: self-hosted  # Runner self-hosted no Windows

    env:
      IMAGE_NAME: talesvalcacer/superliga-dashboard

    steps:
      - name: Marcar diretório como seguro
        run: git config --global --add safe.directory C:/Users/tales/actions-runner/_work/dashboard-superliga/dashboard-superliga

      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.ref_name }} .
          docker push ${{ env.IMAGE_NAME }}:${{ github.ref_name }}

      - name: Configurar kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configurar kubeconfig
        run: |
          # Substitua abaixo com o método que você usa para fornecer o kubeconfig
          # Por exemplo, você pode armazenar o kubeconfig como um secret e escrever no arquivo
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      # ==========
      # Etapas para QA
      # ==========
      - name: Preparar manifesto para QA
        if: github.ref_name == 'qa'
        shell: pwsh
        run: |
          (Get-Content .\app.yaml) -replace '\{\{namespace\}\}', 'qa' `
                                    -replace '\{\{image\}\}', "${env:IMAGE_NAME}:qa" | 
                                    Set-Content .\app.qa.yaml

      - name: Validar manifesto para QA
        if: github.ref_name == 'qa'
        shell: pwsh
        run: |
          Write-Output "======= Conteúdo do app.qa.yaml ======="
          Get-Content .\app.qa.yaml
          kubectl apply --dry-run=client -f .\app.qa.yaml

      - name: Deploy para Kubernetes (QA)
        if: github.ref_name == 'qa'
        shell: pwsh
        run: |
          kubectl apply -f .\app.qa.yaml

      # ==========
      # Etapas para PRD
      # ==========
      - name: Preparar manifesto para PRD
        if: github.ref_name == 'prd'
        shell: pwsh
        run: |
          (Get-Content .\app.yaml) -replace '\{\{namespace\}\}', 'prd' `
                                    -replace '\{\{image\}\}', "${env:IMAGE_NAME}:prd" | 
                                    Set-Content .\app.prd.yaml

      - name: Validar manifesto para PRD
        if: github.ref_name == 'prd'
        shell: pwsh
        run: |
          Write-Output "======= Conteúdo do app.prd.yaml ======="
          Get-Content .\app.prd.yaml
          kubectl apply --dry-run=client -f .\app.prd.yaml

      - name: Deploy para Kubernetes (PRD)
        if: github.ref_name == 'prd'
        shell: pwsh
        run: |
          kubectl apply -f .\app.prd.yaml
