name: CI/CD Pipeline with Docker and Kubernetes

on:
  push:
    branches: [ "qa", "prd" ]  

jobs:
  deploy:
    runs-on: self-hosted

    env:
      IMAGE_NAME: talesvalcacer/superliga-dashboard

    steps:
      # Step 1: Marcar diretório como seguro (caso necessário no seu runner local)
      - name: Mark safe directory
        run: git config --global --add safe.directory C:/Users/tales/actions-runner/_work/dashboard-superliga/dashboard-superliga

      # Step 2: Checkout do código
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 3: Fazer login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build e Push da imagem Docker
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.ref_name }} .
          docker push ${{ env.IMAGE_NAME }}:${{ github.ref_name }}

      # Step 5: Configurar kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Step 6: Configurar kubeconfig
      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      # Step 7: Substituir placeholders no app.yaml
      - name: Replace placeholders for QAS
        if: github.ref_name == 'qa'
        run: |
          sed "s|{{namespace}}|quality|g; s|{{image}}|${{ env.IMAGE_NAME }}:${{ github.ref_name }}|g; s|{{nodePort}}|30001|g" app.yaml > app-qas.yaml

      - name: Replace placeholders for PRD
        if: github.ref_name == 'prd'
        run: |
          sed "s|{{namespace}}|production|g; s|{{image}}|${{ env.IMAGE_NAME }}:${{ github.ref_name }}|g; s|{{nodePort}}|30002|g" app.yaml > app-prd.yaml

      # Step 8: Deploy no cluster QAS
      - name: Deploy to QAS
        if: github.ref_name == 'qa'
        env:
          QAS_CONTEXT: qas
        run: |
          kubectl config use-context $QAS_CONTEXT
          kubectl config set-context --current --namespace=quality
          kubectl apply -f app-qas.yaml
          kubectl rollout restart deployment/superliga-dashboard -n quality
          kubectl rollout status deployment/superliga-dashboard -n quality

      # Step 9: Deploy no cluster PRD
      - name: Deploy to PRD
        if: github.ref_name == 'prd'
        env:
          PRD_CONTEXT: prd
        run: |
          kubectl config use-context prd
          kubectl config set-context --current --namespace=production
          kubectl apply -f app-prd.yaml
          kubectl rollout restart deployment/superliga-dashboard -n production
          kubectl rollout status deployment/superliga-dashboard -n production
